{"version":3,"file":"static/js/828.3ecbf7b0.chunk.js","mappings":"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","sources":["components/MovieList.jsx","components/SearchForm.jsx","pages/Movies.jsx","service/movieApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './styles.module.css';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(element => {\n        return (\n          <li key={element.id}>\n            <Link\n              to={`/movies/${element.id}`}\n              state={{ from: location }}\n              className={css.homepage__link}\n            >\n              {element.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport css from './styles.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter movie name\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          className={css.form__input}\n        />\n        <button type=\"submit\" className={css.form__btn}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovies } from 'service/movieApi';\nimport { SearchForm } from 'components/SearchForm';\nimport { MovieList } from 'components/MovieList';\nimport css from '../components/styles.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleFormSubmit = value => {\n    setSearchParams({ query: value });\n  };\n  const query = searchParams.get('query' ?? '');\n\n  useEffect(() => {\n    async function fetchMovies() {\n      const response = await getMovies(query);\n      setMovies(response);\n    }\n    fetchMovies();\n  }, [query]);\n  return (\n    <div>\n      <h1 className={css.movies__title}>Search movies</h1>\n      <SearchForm onSubmit={handleFormSubmit} />\n      {movies && <MovieList movies={movies} />}\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst API_KEY = '48efdd88d1650cc055b0f5a157a41228';\n\nexport async function getMovies(searchQuery) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie?';\n  try {\n    Loading.pulse();\n    const response = await axios.get(BASE_URL, {\n      params: {\n        api_key: API_KEY,\n        query: searchQuery,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    console.log(response.data.total_results);\n    if (searchQuery && response.data.total_results === 0) {\n      return Notify.failure(`No movies with name ${searchQuery}`);\n    }\n\n    return response.data.results;\n  } catch (e) {\n    Notify.failure('Something went wrong...');\n    console.log(e);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getTrendMovies() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  try {\n    Loading.pulse();\n    const response = await axios.get(BASE_URL, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (e) {\n    Notify.failure('Something went wrong...');\n    console.log(e);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getFullInfo(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n"],"names":["MovieList","movies","location","useLocation","map","element","to","id","state","from","className","css","title","SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","type","placeholder","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getMovies","response","fetchMovies","API_KEY","searchQuery","Loading","axios","params","api_key","page","include_adult","console","log","data","total_results","Notify","results","getTrendMovies","getFullInfo","getMovieCast","getMovieReviews"],"sourceRoot":""}