{"version":3,"file":"static/js/597.ef88684d.chunk.js","mappings":"kOA6CA,UAxCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,IAAaH,GADtC,OACQI,EADR,OAEEL,EAAQK,EAASN,MAFnB,4CADc,uBAAC,WAAD,wBAKdO,EACD,GAAE,CAACL,KAEF,yBACGF,EAAKQ,OAAS,GACb,eAAIC,UAAWC,EAAAA,EAAAA,WAAf,SACGV,EAAKW,KAAI,SAAAC,GACR,OACE,gBAA0BH,UAAWC,EAAAA,EAAAA,WAArC,WACE,gBACEG,IACED,EAAQE,aAAR,8CAC2CF,EAAQE,cADnD,UAEOC,EAAQ,MAEjBC,IAAKJ,EAAQK,KACbC,MAAM,SAER,uBAAIN,EAAQK,QACZ,cAAGR,UAAWC,EAAAA,EAAAA,WAAd,SAA+BE,EAAQO,cAXhCP,EAAQQ,QAcpB,OAGH,cAAGX,UAAWC,EAAAA,EAAAA,mBAAd,0BAIP,C,iNCvCKW,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,6EACY,6CADZ,SAGHC,EAAAA,QAAAA,QAHG,SAIoBC,EAAAA,EAAAA,IAHR,6CAG4B,CACzCC,OAAQ,CACNC,QAASN,EACTO,MAAOL,EACPM,KAAM,EACNC,eAAe,KAThB,UAIGxB,EAJH,OAYHyB,QAAQC,IAAI1B,EAAS2B,KAAKC,gBACtBX,GAA+C,IAAhCjB,EAAS2B,KAAKC,cAb9B,yCAcMC,EAAAA,OAAAA,QAAA,8BAAsCZ,KAd5C,gCAiBIjB,EAAS2B,KAAKG,SAjBlB,kCAmBHD,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MApBG,yBAsBHR,EAAAA,QAAAA,SAtBG,oGA0BA,SAAea,IAAtB,4CAAO,OAAP,oBAAO,0FACY,kDADZ,SAGHb,EAAAA,QAAAA,QAHG,SAIoBC,EAAAA,EAAAA,IAHR,kDAG4B,CACzCC,OAAQ,CACNC,QAASN,KANV,cAIGf,EAJH,yBASIA,EAAS2B,KAAKG,SATlB,gCAWHD,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAZG,yBAcHR,EAAAA,QAAAA,SAdG,mGAkBA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFAEHf,EAAAA,QAAAA,QAFG,SAGoBC,EAAAA,EAAAA,IAAA,6CACiBc,GACtC,CACEb,OAAQ,CACNC,QAASN,KAPZ,cAGGf,EAHH,yBAWIA,EAAS2B,MAXb,gCAaHE,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAdG,yBAgBHR,EAAAA,QAAAA,SAhBG,mGAoBA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BkC,GAA5B,uFAEHf,EAAAA,QAAAA,QAFG,SAGoBC,EAAAA,EAAAA,IAAA,6CACiBc,EADjB,YAErB,CACEb,OAAQ,CACNC,QAASN,KAPZ,cAGGf,EAHH,yBAWIA,EAAS2B,MAXb,gCAaHE,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAdG,yBAgBHR,EAAAA,QAAAA,SAhBG,mGAoBA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFAEHf,EAAAA,QAAAA,QAFG,SAGoBC,EAAAA,EAAAA,IAAA,6CACiBc,EADjB,YAErB,CACEb,OAAQ,CACNC,QAASN,KAPZ,cAGGf,EAHH,yBAWIA,EAAS2B,MAXb,gCAaHE,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAdG,yBAgBHR,EAAAA,QAAAA,SAhBG,mG","sources":["components/Cast.jsx","service/movieApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'service/movieApi';\nimport css from './styles.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieCast() {\n      const response = await getMovieCast(movieId);\n      setCast(response.cast);\n    }\n    fetchMovieCast();\n  }, [movieId]);\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul className={css.cast__list}>\n          {cast.map(element => {\n            return (\n              <li key={element.cast_id} className={css.cast__item}>\n                <img\n                  src={\n                    element.profile_path\n                      ? `https://image.tmdb.org/t/p/original/${element.profile_path}`\n                      : `${require('../images/no-picture.jpg')}`\n                  }\n                  alt={element.name}\n                  width=\"100\"\n                />\n                <p>{element.name}</p>\n                <p className={css.cast__hero}>{element.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className={css.reviews__errorText}>No cast yet</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst API_KEY = '48efdd88d1650cc055b0f5a157a41228';\n\nexport async function getMovies(searchQuery) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie?';\n  try {\n    Loading.pulse();\n    const response = await axios.get(BASE_URL, {\n      params: {\n        api_key: API_KEY,\n        query: searchQuery,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    console.log(response.data.total_results);\n    if (searchQuery && response.data.total_results === 0) {\n      return Notify.failure(`No movies with name ${searchQuery}`);\n    }\n\n    return response.data.results;\n  } catch (e) {\n    Notify.failure('Something went wrong...');\n    console.log(e);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getTrendMovies() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  try {\n    Loading.pulse();\n    const response = await axios.get(BASE_URL, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (e) {\n    Notify.failure('Something went wrong...');\n    console.log(e);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getFullInfo(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","response","fetchMovieCast","length","className","css","map","element","src","profile_path","require","alt","name","width","character","cast_id","API_KEY","getMovies","searchQuery","Loading","axios","params","api_key","query","page","include_adult","console","log","data","total_results","Notify","results","getTrendMovies","getFullInfo","id","getMovieReviews"],"sourceRoot":""}