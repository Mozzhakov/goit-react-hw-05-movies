{"version":3,"file":"static/js/713.062b57a1.chunk.js","mappings":"6MAIaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAQE,IACvBC,MAAO,CAAEC,KAAMP,GACfQ,UAAWC,EAAAA,EAAAA,eAHb,SAKGN,EAAQO,SANJP,EAAQE,GAUpB,KAGN,C,kHCDD,UAjBiB,WACf,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,MADzB,OACQC,EADR,OAEEH,EAAUG,GAFZ,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,KAED,6BACE,eAAIR,UAAWC,EAAAA,EAAAA,gBAAf,8BACA,SAAC,IAAD,CAAWV,OAAQA,MAGxB,C,iNChBKkB,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,6EACY,6CADZ,SAGHC,EAAAA,QAAAA,QAHG,SAIoBC,EAAAA,EAAAA,IAHR,6CAG4B,CACzCC,OAAQ,CACNC,QAASN,EACTO,MAAOL,EACPM,KAAM,EACNC,eAAe,KAThB,UAIGX,EAJH,OAYHY,QAAQC,IAAIb,EAASc,KAAKC,gBACtBX,GAA+C,IAAhCJ,EAASc,KAAKC,cAb9B,yCAcMC,EAAAA,OAAAA,QAAA,8BAAsCZ,KAd5C,gCAiBIJ,EAASc,KAAKG,SAjBlB,kCAmBHD,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MApBG,yBAsBHR,EAAAA,QAAAA,SAtBG,oGA0BA,SAAeN,IAAtB,4CAAO,OAAP,oBAAO,0FACY,kDADZ,SAGHM,EAAAA,QAAAA,QAHG,SAIoBC,EAAAA,EAAAA,IAHR,kDAG4B,CACzCC,OAAQ,CACNC,QAASN,KANV,cAIGF,EAJH,yBASIA,EAASc,KAAKG,SATlB,gCAWHD,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAZG,yBAcHR,EAAAA,QAAAA,SAdG,mGAkBA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA2B5B,GAA3B,uFAEHe,EAAAA,QAAAA,QAFG,SAGoBC,EAAAA,EAAAA,IAAA,6CACiBhB,GACtC,CACEiB,OAAQ,CACNC,QAASN,KAPZ,cAGGF,EAHH,yBAWIA,EAASc,MAXb,gCAaHE,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAdG,yBAgBHR,EAAAA,QAAAA,SAhBG,mGAoBA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,uFAEHe,EAAAA,QAAAA,QAFG,SAGoBC,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,YAErB,CACEiB,OAAQ,CACNC,QAASN,KAPZ,cAGGF,EAHH,yBAWIA,EAASc,MAXb,gCAaHE,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAdG,yBAgBHR,EAAAA,QAAAA,SAhBG,mGAoBA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,uFAEHe,EAAAA,QAAAA,QAFG,SAGoBC,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,YAErB,CACEiB,OAAQ,CACNC,QAASN,KAPZ,cAGGF,EAHH,yBAWIA,EAASc,MAXb,gCAaHE,EAAAA,OAAAA,QAAe,2BACfJ,QAAQC,IAAR,MAdG,yBAgBHR,EAAAA,QAAAA,SAhBG,mG","sources":["components/MovieList.jsx","pages/Homepage.jsx","service/movieApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './styles.module.css';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(element => {\n        return (\n          <li key={element.id}>\n            <Link\n              to={`/movies/${element.id}`}\n              state={{ from: location }}\n              className={css.homepage__link}\n            >\n              {element.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { getTrendMovies } from 'service/movieApi';\nimport { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList';\nimport css from '../components/styles.module.css';\n\nconst Homepage = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchTdendMovies() {\n      const response = await getTrendMovies();\n      setMovies(response);\n    }\n    fetchTdendMovies();\n  }, []);\n  return (\n    <main>\n      <h1 className={css.homepage__title}>Trending movies</h1>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Homepage;\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst API_KEY = '48efdd88d1650cc055b0f5a157a41228';\n\nexport async function getMovies(searchQuery) {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie?';\n  try {\n    Loading.pulse();\n    const response = await axios.get(BASE_URL, {\n      params: {\n        api_key: API_KEY,\n        query: searchQuery,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    console.log(response.data.total_results);\n    if (searchQuery && response.data.total_results === 0) {\n      return Notify.failure(`No movies with name ${searchQuery}`);\n    }\n\n    return response.data.results;\n  } catch (e) {\n    Notify.failure('Something went wrong...');\n    console.log(e);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getTrendMovies() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  try {\n    Loading.pulse();\n    const response = await axios.get(BASE_URL, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (e) {\n    Notify.failure('Something went wrong...');\n    console.log(e);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getFullInfo(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    Loading.pulse();\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Something went wrong...');\n    console.log(error);\n  } finally {\n    Loading.remove();\n  }\n}\n"],"names":["MovieList","movies","location","useLocation","map","element","to","id","state","from","className","css","title","useState","setMovies","useEffect","getTrendMovies","response","fetchTdendMovies","API_KEY","getMovies","searchQuery","Loading","axios","params","api_key","query","page","include_adult","console","log","data","total_results","Notify","results","getFullInfo","getMovieCast","getMovieReviews"],"sourceRoot":""}